# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python package

on:
  push:
    branches: [ "main", "develop" ]
  pull_request:
    branches: [ "main", "develop" ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10"]
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install poetry
        poetry install
        python -m pip install -e .
    - name: Lint with flake8
      run: |
        python -m flake8 --ignore=E501 --count --show-source --statistics .
    - name: src file type check with mypy
      run: |
        python -m mypy --check-untyped-defs coursera_specializations_data_structures_and_algorithms
    - name: test file type check with mypy
      run: |
        python -m mypy --check-untyped-defs tests
    - name: Check files using the isort formatter
      uses: isort/isort-action@v1.0.0
    - name: Check files using the black formatter
      uses: rickstaa/action-black@v1
    - name: src vulnerability Check with bandit
      run: |
        python -m bandit -r coursera_specializations_data_structures_and_algorithms
    - name: Test with pytest
      run: |
        python -m pytest --cov=coursera_specializations_data_structures_and_algorithms --cov-branch --junitxml=pytest.xml --cov-report=term-missing:skip-covered | tee pytest-coverage.txt
    - name: Create Coverage Comment
      id: coverage_comment
      uses: MishaKav/pytest-coverage-comment@main
      with:
        pytest-coverage-path: pytest-coverage.txt
        junitxml-path: pytest.xml